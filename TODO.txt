## NEXT #########################################

- about plugin
-- cacheable list action
-- todos in controller
-- add basic templates (nt, json-ld, rdf, ttl)
-- configure xml,xmp page types
-- finish about plugin just as much as necessary for production

- resolver
-- implement basic http resolver

- bring stuff live and create/migrate data
-- mechanism for creating subjects when images are created

---

Rewrite to tx_lod:

delete subject and object tables

introduce three tables:
resources (uris) => can be associated with a T3 record (former subjects and objects of type URI and records)
bnodes => subjects and objects of type blank nodes
literals => former objects of type literal

this ensures uniqueness of resources

change table statements
subject field => allow table resources and blank nodes
object field => allow table resources, blank nodes and literals

---

id=123 => rewritten by realurl to 'id' or whatever (= pagePath)
&tx_vocabulary_about%5Bsubject%5D=1995 => rewritten by realurl to /id/value (= fixedPostVars)
&type=2004 => rewritten by realUrl to about.xyz (= fileName)

&tx_vocabulary_about%5Baction%5D=about => skipped (by initializeAction and fixedPostVars)
&tx_vocabulary_about%5Bcontroller%5D=Subjects skipped (by initializeAction and fixedPostVars)
&tx_vocabulary_about%5Bformat%5D=rdfxml => ignored/suppressed (by initialize Action; switch is by pageType)

&cHash => skipped (by realUrl config)

/id/I385

/id/I385/about.html

/resources.html

/resources/about.rdf?tx_vocabulary_about[offset]=2&tx_vocabulary_about[limit]=100

---

scheme = handler type => t3 triggers internal resolving
authority = handler keyword
path = typolink parameter
query = additionalParams
fragment = section

---

## TYPO3 8.7

# standard record link configuration from T3 V8 and higher

TCEMAIN.linkHandler.image {
	handler = TYPO3\CMS\Recordlist\LinkHandler\RecordLinkHandler
	label = LLL:EXT:cvma/Resources/Private/Language/locallang.xlf:link.customTab
	configuration {
		table = sys_file_metadata
	}
	scanBefore = page
}

config.recordLinks.image {

	forceLink = 0

	typolink {
		parameter = 13
		additionalParams.data = field:uid
		additionalParams.wrap = tx_cvma_archive[image]=|&tx_cvma_archive[action]=show&tx_cvma_archive[controller]=Gallery
		section.data = field:fragment
		useCacheHash = 1
	}
}

plugin.tx_vocabulary_about {
	settings {

		# this section maps TYPO3 format keywords to correct mime types (for content negotiation)
		formatToMediaTypeMapping {

			html = text/html
			rdfxml = application/rdf+xml
			xmp = application/xml
			json = application/json
			ttl = text/turtle

		}

		resolver {

			# each scheme can have it's own custom resolver
#			scheme {
#				# each resolver should implement one standard resolving mechanism for all authorities in this scheme
#				# it should also respect special configurations specified authorities that should be treated different
#				authority {
#					# typolink configuration ($cObj->data is current representation record)
#				}
#			}

			t3 {
				# the t3 scheme implements the TYPO3 linkhandler (from 8.7 onwards but with backwards comp. for 7.6)
				# each authority equals / can have it's own linkhandler (=linkhander keyword)
				# the record authority implements the generic record linkhandler
				record < config.recordLinks.image
			}

			http {
				my\.domain\.com {
					# typolink configuration ($cObj->data is current representation record)
				}
			}

			https < .http
		}
	}
}

---

- Add new type Resource Representation for object?
-- use for 303 redirect to html?

- transfer stuff from CVMA to vocabulary ext

- switch wizard_add to 'script' and test editing

- vocabulary
-- is the tablename field really needed since prepend_tname doesn't have any effect?
-- first test with statements for any record
--- check how hard it is to integrate a makeLodifiable => quite hard, integrated later (@see CategoryRegistry)

- default templates for
-- showSelectedTerms
-- showSelectedVocabulary

- create new wizards at predicate + subject selects in statement table
- create new wizard at possibly all select fields

- RDF serializer => condense statements in RDF/XML + TTL output

- bnodes
-- uuid generator for bnodes
-- table 'bnodes' => keeps uuids that can be reused as subjects/objects, have a BE title and are unique in the system
-- bnodes could be made available via suggest wizard besides the value field

- object value field could also have a wizard for subject/object creation

- write some helpful repository methods to retrieve values from s/p/o's
-- maybe from a view helper?

- FLUID
-- generate namespaces in template dynamically from all used


            // get format by page type (name/string of page type must equal extbase template format)
            $this->format = $GLOBALS['TSFE']->tmpl->setup['types.'][$type];
            $formatKey = $this->format . '.';

            if (
                $GLOBALS['TSFE']->tmpl->setup[$formatKey]['typeNum'] == $type
                && $GLOBALS['TSFE']->tmpl->setup[$formatKey]['config.']['additionalHeaders.']
            ) {
                $additionalHeaders = $GLOBALS['TSFE']->tmpl->setup[$formatKey]['config.']['additionalHeaders.'];
                foreach ($additionalHeaders as $additionalHeader) {
                    if (preg_match('/Content-type:/', $additionalHeader['header'])) {
                        $this->contentType = str_replace('Content-type:', '', $additionalHeader['header']);
                    }
                }
            } else {
// @TODO: throw exception: additionalHeader with content type must be set for this page type
            }

http://corpusvitrearum.local/id/I3440